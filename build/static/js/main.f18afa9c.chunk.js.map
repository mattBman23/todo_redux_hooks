{"version":3,"sources":["constants/constants.js","reducers/todoReducers.js","store/store.js","components/todo/TodoForm.js","actions/todoActions.js","components/todo/TodoList.js","screens/TodoScreen.js","index.js"],"names":["ADD_TODO","UPDATE_TODO","DELETE_TODO","SET_CHOSEN_TODO","CHECK_TODO","initState","todos","JSON","parse","localStorage","getItem","chosenTodo","store","createStore","state","action","type","setItem","stringify","payload","newTodos","filter","x","id","map","todo","title","isDone","applyMiddleware","thunk","TodoForm","useState","setTitle","dispatch","useDispatch","theChosenTodo","useSelector","useEffect","className","placeholder","value","onChange","e","target","onClick","updateTodo","uuidv4","addToTodo","TodoList","deleteHandler","deleteTodo","editHandler","dispath","setChosenTodo","checkHandler","checkTodo","length","li","animate","scale","transition","duration","whileHover","initial","style","textDecoration","textAlign","TodoScreen","render","document","getElementById"],"mappings":"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","file":"static/js/main.f18afa9c.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const SET_CHOSEN_TODO = 'SET_CHOSEN_TODO';\r\nexport const CHECK_TODO = 'CHECK_TODO';\r\n","import {\r\n  ADD_TODO,\r\n  CHECK_TODO,\r\n  DELETE_TODO,\r\n  SET_CHOSEN_TODO,\r\n  UPDATE_TODO,\r\n} from '../constants/constants';\r\n\r\nconst initState = {\r\n  todos: JSON.parse(localStorage.getItem('todoList')) || [],\r\n  chosenTodo: null,\r\n};\r\n\r\nexport const TodoReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      localStorage.setItem(\r\n        'todoList',\r\n        JSON.stringify([...state.todos, action.payload])\r\n      );\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n      };\r\n    case DELETE_TODO:\r\n      let newTodos = state.todos.filter((x) => x.id !== action.payload);\r\n      localStorage.setItem('todoList', JSON.stringify(newTodos));\r\n      return {\r\n        ...state,\r\n        todos: newTodos,\r\n      };\r\n    case SET_CHOSEN_TODO:\r\n      return { ...state, chosenTodo: action.payload };\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id === state.chosenTodo.id) {\r\n            todo.title = action.payload;\r\n          }\r\n          return todo;\r\n        }),\r\n        chosenTodo: null,\r\n      };\r\n    case CHECK_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id === action.payload) {\r\n            todo.isDone = !todo.isDone;\r\n          }\r\n\r\n          return todo;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TodoReducer } from '../reducers/todoReducers';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(TodoReducer, applyMiddleware(thunk));\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addToTodo, updateTodo } from '../../actions/todoActions';\r\n\r\nexport const TodoForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n  const theChosenTodo = useSelector((state) => state.chosenTodo);\r\n\r\n  useEffect(() => {\r\n    if (theChosenTodo) {\r\n      setTitle(theChosenTodo.title);\r\n    } else {\r\n      setTitle('');\r\n    }\r\n  }, [theChosenTodo]);\r\n\r\n  const changeHandler = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    if (theChosenTodo) {\r\n      dispatch(updateTodo(title));\r\n      setTitle('');\r\n    } else {\r\n      dispatch(addToTodo(title));\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\" id=\"myDIV\">\r\n      <h2>Todo List</h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"myInput\"\r\n        placeholder=\"Title...\"\r\n        value={title}\r\n        onChange={changeHandler}\r\n      />\r\n      <div onClick={submitHandler} className=\"addBtn\">\r\n        {theChosenTodo ? 'Update' : 'Add'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  SET_CHOSEN_TODO,\r\n  UPDATE_TODO,\r\n  CHECK_TODO,\r\n} from '../constants/constants';\r\n\r\nexport const addToTodo = (title) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_TODO,\r\n    payload: {\r\n      title,\r\n      id: uuidv4(),\r\n      isDone: false,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteTodo = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_TODO,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const setChosenTodo = (todo) => (dispath) => {\r\n  dispath({\r\n    type: SET_CHOSEN_TODO,\r\n    payload: todo,\r\n  });\r\n};\r\n\r\nexport const updateTodo = (title) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_TODO,\r\n    payload: title,\r\n  });\r\n};\r\n\r\nexport const checkTodo = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: CHECK_TODO,\r\n    payload: id,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  checkTodo,\r\n  deleteTodo,\r\n  setChosenTodo,\r\n} from '../../actions/todoActions';\r\n\r\nexport const TodoList = () => {\r\n  const todos = useSelector((state) => state.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const editHandler = (todo) => {\r\n    dispatch(setChosenTodo(todo));\r\n  };\r\n\r\n  const checkHandler = (id) => {\r\n    dispatch(checkTodo(id));\r\n  };\r\n\r\n  return todos.length ? (\r\n    <div id=\"myUL\">\r\n      {todos.map((todo) => (\r\n        <motion.li\r\n          key={todo.id}\r\n          animate={{ scale: 0.9 }}\r\n          transition={{ duration: 0.3 }}\r\n          whileHover={{ scale: 0.95 }}\r\n          initial={{ scale: 0.9 }}\r\n        >\r\n          <div className=\"todoBody\">\r\n            <div\r\n              style={todo.isDone ? { textDecoration: 'line-through' } : {}}\r\n              className=\"leftTodo\"\r\n            >\r\n              {todo.title}\r\n            </div>\r\n            <div className=\"rightTodo\">\r\n              <div\r\n                onClick={() => editHandler(todo)}\r\n                className=\"btn btn-info float-left\"\r\n              >\r\n                Edit\r\n              </div>\r\n              <div\r\n                onClick={() => checkHandler(todo.id)}\r\n                className=\"btn btn-primary float-left\"\r\n              >\r\n                Check\r\n              </div>\r\n              <div\r\n                onClick={() => deleteHandler(todo.id)}\r\n                className=\"btn btn-danger float-left\"\r\n              >\r\n                Delete\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.li>\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h2 style={{ textAlign: 'center' }}>List is empty</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { TodoForm } from '../components/todo/TodoForm';\r\nimport { TodoList } from '../components/todo/TodoList';\r\n\r\nexport const TodoScreen = () => {\r\n  return (\r\n    <div>\r\n      <TodoForm />\r\n      <br />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport { TodoScreen } from './screens/TodoScreen';\r\n\r\nimport './index.css';\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <TodoScreen />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}